{"version":3,"sources":["store/action.js","constants/draggable.js","disk/disk-component.js","containers/moveDisks.js","holder/holder-component.js","holder/holder-state.js","holder-list/holder-list-component.js","holder-list/holder-list-state.js","App.js","serviceWorker.js","store/reducer.js","AppState.js","index.js"],"names":["MOVE_DISK","JUDGE_WINNER","RECORD_STEP","RESET_GAME","ItemTypes","diskSource","canDrag","props","id","position","disks","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","disk","value","err","return","checkEmpty","state","filter","item","beginDrag","diskId","DragSource","connect","monitor","connectDragSource","dragSource","isDragging","_ref","diskStyle","onMoveClick","width","height","backgroundImage","margin","borderRadius","zIndex","boxShadow","opacity","react_default","a","createElement","style","onClick","MoveDisks","dispatch","ownProps","Disk","holderTarget","canDrop","selectedDisk","getItem","droppableContainer","i","push","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","indexOf","splice","console","log","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","getIdByPosition","checkOverlap","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getPositionById","checkGravity","drop","type","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","DropTarget","connectDropTarget","dropTarget","isOver","children","className","top","left","borderTop","borderBottom","borderLeft","borderLeftColor","HolderState","Holder","renderHolder","diskExists","piece","moveDisks","holder_state","key","HolderListState","holders","DragDropContext","HTML5Backend","handleClick","class","winner","step","bottom","backgroundColor","map","index","holder_list_state","Boolean","window","location","hostname","match","initialState","arguments","length","action","Object","objectSpread","diskItem","gameOver","AppState","App","store","createStore","ReactDOM","render","es","src_AppState","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.200d0ef8.chunk.js","sourcesContent":["export const MOVE_DISK = 'MOVE_DISK'\nexport const JUDGE_WINNER = 'JUDGE_WINNER'\nexport const RECORD_STEP = 'RECORD_STEP'\nexport const RESET_GAME = 'RESET_GAME'\n\n// export const VisibilityFilters = {\n//   SHOW_ALL: 'SHOW_ALL',\n//   SHOW_COMPLETED: 'SHOW_COMPLETED',\n//   SHOW_ACTIVE: 'SHOW_ACTIVE'\n// }\n\n/*\n * action creators\n */\n\nexport function moveDisk(disk) {\n  return { type: MOVE_DISK , disk }\n}\n\nexport function judgeWinner() {\n  return { type: JUDGE_WINNER  }\n}\n\nexport function recordStep() {\n  return { type: RECORD_STEP  }\n}\n\nexport function resetGame() {\n  return { type: RESET_GAME  }\n}\n","export const ItemTypes = {\n    DISK: 'disk'\n}","import React from 'react';\n// import './disk.css'\nimport { DragSource } from 'react-dnd';\nimport { ItemTypes } from '../constants/draggable';\n\nconst diskSource = {\n    canDrag(props) {\n        if (props.id > 1) {\n            let currentDisk = props.state.disks.filter(item => item.id === props.id)\n            let currentPosition = currentDisk[0].position;\n            return checkEmpty(currentPosition - 3, props.state.disks);\n        }\n        return true;\n    },\n\n    beginDrag(props) {\n        return {\n            diskId: props.id\n        };\n    }\n};\n\nfunction checkEmpty(position, disks) {\n    for (let disk of disks) {\n        if (disk.position === position) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDragSource: connect.dragSource(),\n        isDragging: monitor.isDragging()\n    }\n}\n\nfunction Disk({ id, onMoveClick, connectDragSource, isDragging, state }) {\n\n    let diskStyle;\n    switch (id) {\n        case 1:\n            diskStyle = {\n                width: '40%',\n                height: '55px',\n                backgroundImage: 'linear-gradient( -45deg, #5d5d5d 0%, #3f3f3f 27%, #1c1c1c 87% )',\n                margin: 'auto',\n                borderRadius: '3px',\n                zIndex: 1,\n                boxShadow: '0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2)'\n            }\n            break;\n        case 2:\n            diskStyle = {\n                width: '53%',\n                height: '55px',\n                backgroundImage: 'linear-gradient( -45deg, #5d5d5d 0%, #3f3f3f 27%, #1c1c1c 87% )',\n                margin: 'auto',\n                borderRadius: '3px',\n                zIndex: 1,\n                boxShadow: '0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2)'\n\n            }\n            break;\n        case 3:\n            diskStyle = {\n                width: '65%',\n                height: '55px',\n                backgroundImage: 'linear-gradient( -45deg, #5d5d5d 0%, #3f3f3f 27%, #1c1c1c 87% )',\n                margin: 'auto',\n                borderRadius: '3px',\n                zIndex: 1,\n                boxShadow: '0 2px 2px 0 rgba(0,0,0,0.14), 0 3px 1px -2px rgba(0,0,0,0.12), 0 1px 5px 0 rgba(0,0,0,0.2)'\n\n            }\n            break;\n        default:\n            break;\n    }\n\n    diskStyle.opacity = isDragging ? 0.5 : 1;\n\n    return connectDragSource(\n            <div style={diskStyle} onClick={() => onMoveClick(id)}>\n            </div>\n    );\n}\n\n\nexport default DragSource(ItemTypes.DISK, diskSource, collect)(Disk)\n","import { connect } from 'react-redux'\nimport { moveDisk } from '../store/action'\nimport Disk from '../disk/disk-component'\n\n\nconst mapStateToProps = state => {\n    return {\n        state : state}\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        onMoveClick: id => {\n            // dispatch(moveDisk({ id: ownProps.id, position: 8 }))\n        }\n    }\n}\n\nconst MoveDisks = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Disk)\n\nexport default MoveDisks","import React from 'react';\nimport './holder.css'\nimport { ItemTypes } from '../constants/draggable';\nimport { DropTarget } from 'react-dnd';\nimport { moveDisk, judgeWinner, recordStep } from '../store/action'\n\nconst holderTarget = {\n\n    canDrop(props, monitor) {\n        let selectedDisk = monitor.getItem();\n\n        for (let disk of props.state.disks) {\n            if (disk.position === props.position) {\n                return false;\n            }\n        }\n\n        let droppableContainer = [];\n        for (let i = 0; i < 9; i++) {\n            droppableContainer.push(i);\n        }\n\n        for (let disk of props.state.disks) {\n            if (droppableContainer.indexOf(disk.position) >= 0) {\n                droppableContainer.splice(droppableContainer.indexOf(disk.position), 1);\n            }\n        }\n        console.log(droppableContainer)\n\n        droppableContainer = droppableContainer.filter(position => {\n            if (position < 6) {\n                return !checkEmpty(position + 3, props.state.disks)\n                    && checkOverlap(position, props.state.disks, selectedDisk)\n                    && checkGravity(position, props.state.disks, selectedDisk);\n            }\n            return true\n        })\n\n        if (droppableContainer.indexOf(props.position) >= 0) {\n            return true\n        } else {\n            return false\n        }\n\n    },\n\n    drop(props, monitor) {\n        let selectedDisk = monitor.getItem();\n        // console.log(selectedDisk)\n        // console.log(props)\n        props.dispatch(moveDisk({ id: selectedDisk.diskId, position: props.position }))\n        //   moveKnight(props.x, props.y);\n        props.dispatch(judgeWinner())\n        props.dispatch(recordStep())\n    }\n};\n\nfunction checkEmpty(position, disks) {\n    for (let disk of disks) {\n        if (disk.position === position) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction checkOverlap(position, disks, selectedDisk) {\n    if (!checkEmpty(position + 3, disks)) {\n        if (getIdByPosition(position + 3, disks) < selectedDisk.diskId) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIdByPosition(position, disks) {\n    for (let disk of disks) {\n        if (disk.position === position) {\n            return disk.id;\n        }\n    }\n}\n\nfunction getPositionById(id, disks) {\n    for (let disk of disks) {\n        if (disk.id === id) {\n            return disk.position;\n        }\n    }\n}\n\nfunction checkGravity(position, disks, selectedDisk) {\n    let currentPosition = getPositionById(selectedDisk.diskId, disks);\n\n    return !(currentPosition - 3 === position);\n}\n\nfunction collect(connect, monitor) {\n    return {\n        connectDropTarget: connect.dropTarget(),\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop()\n    };\n}\n\nfunction renderOverlay(color) {\n    return (\n        <div style={{\n            position: 'absolute',\n            top: 5,\n            left: 0,\n            height: 0,\n            width: 0,\n            zIndex: 2,\n            opacity: 0.5,\n            borderTop: '30px solid transparent',\n            borderBottom: '30px solid transparent',\n            borderLeft: '30px solid',\n            borderLeftColor: 'linear-gradient( -45deg, #5d5d5d 0%, #3f3f3f 27%, #1c1c1c 87% )'\n        }} ></div>\n    );\n}\n\n\nfunction Holder({ children, connectDropTarget, isOver, canDrop, position }) {\n\n\n    return connectDropTarget(\n        <div className=\"holder\">\n            <div >\n                {children}\n            </div>\n            {canDrop && renderOverlay('yellow')}\n           \n        </div>\n        );\n    }\n    \n    export default DropTarget(ItemTypes.DISK, holderTarget, collect)(Holder);\n    \n","import { connect } from 'react-redux'\n// import { moveDisk } from '../store/action'\n// import Disk from '../disk/disk-component'\nimport Holder from './holder-component'\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        state: state,\n        position: ownProps.position\n    }\n}\n\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     return {\n//         onMoveClick: id => {\n//             dispatch(moveDisk({ id: ownProps.id, position: 8 }))\n//         }\n//     }\n// }\n\nconst HolderState = connect(\n    mapStateToProps,\n    // mapDispatchToProps\n)(Holder)\n\nexport default HolderState","import React from 'react';\nimport MoveDisks from '../containers/moveDisks'\nimport HolderState from '../holder/holder-state'\nimport './holder-list.css'\n\n\nexport default function HolderList({ state }) {\n\n\n    const holders = [];\n    for (let i = 0; i < 9; i++) {\n        holders.push(renderHolder(i, state));\n    }\n\n    return (\n        <div className=\"disk-container\">\n            {holders}\n        </div>\n    );\n}\n\n\n\nfunction renderHolder(i, state) {\n    let disks = state.disks;\n    console.log(disks)\n    //   let disks = [{ id: 1, position: 0 }, { id: 2, position: 3 }, { id: 3, position: 6 }];\n    let diskExists = disks.filter(item => item.position === i);\n    const piece = diskExists[0] ? <MoveDisks id={diskExists[0].id} /> : null;\n\n    return (\n\n        <HolderState key={i} position={i}>\n            {piece}\n        </HolderState>\n\n\n\n    );\n}\n\n// export default DropTarget(ItemTypes.DISK, holderTarget, collect)(HolderList);\n\n","import { connect } from 'react-redux'\n// import { moveDisk } from '../store/action'\n// import Disk from '../disk/disk-component'\nimport HolderList from './holder-list-component'\n\nconst mapStateToProps = state => {\n    return {\n        state : state}\n}\n\n// const mapDispatchToProps = (dispatch, ownProps) => {\n//     return {\n//         onMoveClick: id => {\n//             dispatch(moveDisk({ id: ownProps.id, position: 8 }))\n//         }\n//     }\n// }\n\nconst HolderListState = connect(\n    mapStateToProps,\n    // mapDispatchToProps\n)(HolderList)\n\nexport default HolderListState","import React from 'react';\nimport './App.css';\nimport HolderListState from './holder-list/holder-list-state'\nimport { DragDropContext } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nfunction App({ state, handleClick }) {\n\n  const rodStyle = [\n    {\n      position: 'absolute',\n      bottom: '3%',\n      left: '12.5%',\n      width: '3%',\n      height: '210px',\n      backgroundColor: \"#e5453d\",\n      zIndex: 0\n    },\n    {\n      position: 'absolute',\n      bottom: '3%',\n      left: '40.5%',\n      width: '3%',\n      height: '210px',\n      backgroundColor: \"#e5453d\",\n      zIndex: 0\n    },\n    {\n      position: 'absolute',\n      bottom: '3%',\n      left: '68.5%',\n      width: '3%',\n      height: '210px',\n      backgroundColor: \"#e5453d\",\n      zIndex: 0\n    }\n  ]\n\n  return (\n    <div className=\"App\">\n      <div className=\"spacing\"></div>\n      <div className=\"banner-spacing\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col s6\">\n              {state.winner ? <div className=\"ribbon-banner\"><span>You are the winner!</span></div> : <div></div>}\n            </div>\n            <div class=\"col s4\">\n              You Took <strong>{state.step}</strong> Steps already\n          </div>\n            <div class=\"col s2\">\n              <a class=\"waves-effect waves-light btn grey darken-4 \" onClick={() => handleClick()}>Reset</a>\n            </div>\n          </div>\n        </div>\n      </div>\n      {rodStyle.map((style, index) => {\n        return <div key={index} style={style}></div>\n      })}\n\n      <HolderListState />\n    </div>\n  );\n}\n\nexport default DragDropContext(HTML5Backend)(App)\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    MOVE_DISK,\n    JUDGE_WINNER,\n    RECORD_STEP,\n    RESET_GAME\n} from './action'\n\nconst initialState = {\n    disks: [{ id: 1, position: 0 }, { id: 2, position: 3 }, { id: 3, position: 6 }],\n    winner: false,\n    step: 0\n}\n\nfunction disks(state = initialState, action) {\n    switch (action.type) {\n        case MOVE_DISK:\n            return {\n                ...state,\n                disks: state.disks.map((diskItem) => {\n                    console.log(diskItem)\n\n                    if (diskItem.id === action.disk.id) {\n                        console.log(action.disk.id)\n                        console.log(action.disk.position)\n                        return {\n                            id: action.disk.id,\n                            position: action.disk.position\n                        }\n                    }\n                    // console.log(diskItem)\n                    return diskItem\n                })\n            }\n\n\n        case JUDGE_WINNER:\n            let gameOver = (state.disks[0].position === 2) && (state.disks[1].position === 5) && (state.disks[2].position === 8)\n            return {\n                ...state,\n                winner: gameOver\n            }\n\n        case RECORD_STEP:\n            return {\n                ...state,\n                step: state.step + 1\n            }\n\n        case RESET_GAME:\n            return initialState\n\n        default:\n            return state\n    }\n}\n\nexport default disks","import { connect } from 'react-redux'\nimport { resetGame } from './store/action'\n// import Disk from '../disk/disk-component'\nimport App from './App'\n\nconst mapStateToProps = state => {\n    return {\n        state : state}\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleClick: () => {\n            dispatch(resetGame())\n        }\n    }\n}\n\nconst AppState = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n\nexport default AppState","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport disks from './store/reducer'\nimport AppState from './AppState'\n\nconst store = createStore(disks)\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppState />\n    </Provider >, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}